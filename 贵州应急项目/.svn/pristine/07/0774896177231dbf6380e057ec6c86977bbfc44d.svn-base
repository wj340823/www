package com.sucsoft.gzhbyjwz.service;

import com.sucsoft.gzhbyjwz.bean.common.Page;
import com.sucsoft.gzhbyjwz.bean.dc12.ManagerCrew;
import com.sucsoft.gzhbyjwz.bean.dc12.ManagerSpecialist;
import com.sucsoft.gzhbyjwz.bean.dc12.Warehouse;
import com.sucsoft.gzhbyjwz.bean.dc12.XZQY;
import com.sucsoft.gzhbyjwz.service.common.BasicQueryService;
import com.sucsoft.gzhbyjwz.service.user.UserService;
import org.apache.commons.beanutils.BeanUtils;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;
import org.springframework.util.StringUtils;

import java.lang.reflect.InvocationTargetException;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

@Service
public class BasicDataService {

    @Autowired
    private BasicQueryService queryService;

    @Autowired
    private UserService userService;

    /**
     * 列表查询行政区域
     * @return
     * @throws Exception
     */
    public List<Map> listXzqy() throws Exception {
        Map param = new HashMap<>();
        param.put("maxLevel",2);

        return queryService.queryForList("listXzqy",param,Map.class,0,0);
    }

    public List<Map> listXzqyCountWarehouse() throws Exception {
        return queryService.queryForList("listXzqyCountWarehouse",new HashMap<>(),Map.class,0,0);
    }

    public List<Map> listXzqyCountRiskSource() throws Exception {
        return queryService.queryForList("listXzqyCountRiskSource",new HashMap<>(),Map.class,0,0);
    }

    public Page listManagerCrew(String keywords,String unit,String xzqy, Integer pageSize, Integer pageNo) throws Exception {
        Map param = new HashMap();
        if (!StringUtils.isEmpty(keywords)){
            param.put("keywords","%"+keywords+"%");
        }
        if (!StringUtils.isEmpty(unit)){
            param.put("unit",unit);
        }
        if (!StringUtils.isEmpty(xzqy)){
            param.put("xzqy",xzqy);
        }
        return queryService.queryForPage("listManagerCrew",param,ManagerCrew.class,pageNo,pageSize);
    }

    public Page listManagerCrewUnit(String keywords, Integer pageSize, Integer pageNo) throws Exception {
        Map param = new HashMap();
        if (!StringUtils.isEmpty(keywords)){
            param.put("keywords","%"+keywords+"%");
        }

        return queryService.queryForPage("listManagerCrewUnit",param,Map.class,pageNo,pageSize);
    }

    //listWareHouse
    public List<Map> listWareHouse(String xzqyId) throws Exception {
        return queryService.queryForList("listWareHouse",new HashMap<>(),Map.class,0,0);
    }

    public Object getWareHouse(String id) throws IllegalAccessException, NoSuchMethodException, InvocationTargetException {
        Warehouse warehouse = queryService.get(id,Warehouse.class);
        Map result = BeanUtils.describe(warehouse);
        result.put("xzqyName",queryService.get(warehouse.getXzqyId(), XZQY.class).getName());
        return result;
    }

    /**
     * 统计应急资源
     * @return
     * @throws Exception
     */
    public List<Map>  countEmergencyResource() throws Exception {
        return queryService.queryForList("countEmergencyResource",new HashMap<>(),Map.class,0,0);
    }

    public Page getManagerSpecialist(String name, Integer pageNo, Integer pageSize) throws Exception {
        Map param = new HashMap();
        String xzqyId = userService.getCurXzqyId();
        if (!StringUtils.isEmpty(name)){
            param.put("name","%"+name+"%");
        }
//        if(!xzqyId.equals("1")) {
//            param.put("xzqy", xzqyId);
//        }
        return queryService.queryForPage("getManagerSpecialist",param,ManagerSpecialist.class,pageNo,pageSize);
    }

    /**
     * 统计模拟事件数量
     * @return
     * @throws Exception
     */
    public Object countAtmosphericEvent() throws Exception {
        List<Map> list = queryService.queryForList("countAtmosphericEvent",new HashMap<>(),Map.class,0,0);

        if (list != null && list.size() >0){
            return list.get(0).get("sum");
        }else{
            return 0;
        }

    }
}
