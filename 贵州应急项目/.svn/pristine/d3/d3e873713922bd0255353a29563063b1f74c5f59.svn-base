package com.sucsoft.gzhbyjwz.controller.riskManage;

import com.sucsoft.gzhbyjwz.bean.common.Page;
import com.sucsoft.gzhbyjwz.bean.constant.DangerConstant;
import com.sucsoft.gzhbyjwz.bean.constant.TaskStatus;
import com.sucsoft.gzhbyjwz.bean.param.riskManage.HiddenDangerParam;
import com.sucsoft.gzhbyjwz.service.XzqyService;
import com.sucsoft.gzhbyjwz.service.riskmanage.HiddenDangerService;
import com.sucsoft.gzhbyjwz.service.user.UserService;
import io.swagger.annotations.Api;
import io.swagger.annotations.ApiOperation;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.MediaType;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RestController;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import java.util.Map;

@RestController
@RequestMapping("/hiddenDanger")
@Api(value="HiddenDangerController",description="隐患管理")
public class HiddenDangerController {

    @Autowired
    private HiddenDangerService hiddenDangerService;

    @Autowired
    private XzqyService xzqyService;

    @Autowired
    private UserService userService;


    @RequestMapping(value="/listHiddenDanger",method= RequestMethod.GET)
    @ApiOperation(httpMethod="GET",value="回显隐患列表",notes="回显隐患列表",
            produces= MediaType.TEXT_PLAIN_VALUE)
    public Object listHiddenDanger(HiddenDangerParam param) throws Exception{
        //param.setLevel(DangerConstant.DangerLevel.Significant.getLevel());
        //return hiddenDangerService.echoHiddenDanger(param);
        return hiddenDangerService.listHiddenDanger(param,1,0);
    }

    @RequestMapping(value="/listSignificant",method= RequestMethod.GET)
    @ApiOperation(httpMethod="GET",value="重大隐患列表",notes="重大隐患列表",
            produces= MediaType.TEXT_PLAIN_VALUE)
    public Page listSignificant(HiddenDangerParam param,Integer pageNo,Integer pageSize,
                                HttpServletRequest request) throws Exception{
        //级别为重大
        param.setLevel(DangerConstant.DangerLevel.Significant.getLevel());
        //排查任务已通过审核
        param.setStatus(TaskStatus.Pass);
        //排查结果是存在隐患
        param.setResult(1);
        //排序字段为排查日期
        param.setOrdeyBy("i.time DESC");

        //按行政区域划分数据权限
        param.setXzqyIdList(xzqyService.getChildrenLeafId(param.getXzqyId()));
        //企业数据权限
        param.setEnterpriseId(userService.getCurUserComId(request.getSession()));
        return hiddenDangerService.listHiddenDanger(param,pageNo,pageSize);
    }

    @RequestMapping(value="/listGeneral",method= RequestMethod.GET)
    @ApiOperation(httpMethod="GET",value="一般隐患列表",notes="一般隐患列表",
            produces= MediaType.TEXT_PLAIN_VALUE)
    public Page listGeneral(HiddenDangerParam param,Integer pageNo,Integer pageSize,
                            HttpServletRequest request) throws Exception{
        //级别为一般
        param.setLevel(DangerConstant.DangerLevel.General.getLevel());
        //排查任务已通过审核
        param.setStatus(TaskStatus.Pass);
        //排查结果是存在隐患
        param.setResult(1);
        //排序字段为排查日期
        param.setOrdeyBy("i.time DESC");

        //按行政区域划分数据权限
        param.setXzqyIdList(xzqyService.getChildrenLeafId(param.getXzqyId()));
        //企业数据权限
        param.setEnterpriseId(userService.getCurUserComId(request.getSession()));
        return hiddenDangerService.listHiddenDanger(param,pageNo,pageSize);
    }

    @RequestMapping(value="/listEmergency",method= RequestMethod.GET)
    @ApiOperation(httpMethod="GET",value="应急管理隐患列表",notes="应急管理隐患列表",
            produces= MediaType.TEXT_PLAIN_VALUE)
    public Page listEmergency(HiddenDangerParam param,Integer pageNo,Integer pageSize,
                              HttpServletRequest request) throws Exception{
        //级别为应急管理隐患
        param.setLevel(DangerConstant.DangerLevel.Emergency.getLevel());
        //排查任务已通过审核
        param.setStatus(TaskStatus.Pass);
        //排查结果是存在隐患
        param.setResult(1);
        //排序字段为排查日期
        param.setOrdeyBy("i.time DESC");

        //按行政区域划分数据权限
        param.setXzqyIdList(xzqyService.getChildrenLeafId(param.getXzqyId()));
        //企业数据权限
        param.setEnterpriseId(userService.getCurUserComId(request.getSession()));
        return hiddenDangerService.listHiddenDanger(param,pageNo,pageSize);
    }

    @RequestMapping(value="/getRiskDetailById",method= RequestMethod.GET)
    @ApiOperation(httpMethod="GET",value="重大、一般隐患单个详情",notes="重大、一般隐患单个详情",
            produces= MediaType.TEXT_PLAIN_VALUE)
    public Map getRiskDetailById(Integer id) throws Exception{

        return hiddenDangerService.getRiskDetailById(id);
    }

    @RequestMapping(value="/getEmergencyDetailById",method= RequestMethod.GET)
    @ApiOperation(httpMethod="GET",value="应急管理隐患单个详情",notes="应急管理隐患单个详情",
            produces= MediaType.TEXT_PLAIN_VALUE)
    public Object getEmergencyDetailById(Integer id, HttpServletResponse response) throws Exception{
        //response.setStatus(403);
        //response.getWriter().print(hiddenDangerService.getEmergencyDetailById(id));

        return hiddenDangerService.getEmergencyDetailById(id);
    }

}
