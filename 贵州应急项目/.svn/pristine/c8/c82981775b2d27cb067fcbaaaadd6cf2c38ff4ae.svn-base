package com.sucsoft.gzhbyjwz.util;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.net.HttpURLConnection;
import java.net.URL;
import java.util.ArrayList;
import java.util.List;
import java.util.Map;
import java.util.ResourceBundle;

import net.sf.json.JSONArray;
import net.sf.json.JSONObject;

import org.springframework.beans.factory.annotation.Value;
import org.springframework.web.client.RestTemplate;

public final class BaiduUtils {
	
	private static final String BAIDU_KEY="E9a87cbc984ba2ec8cd3b6ee18dee976";//百度密钥
	
	public static String readProperties(){
	    ResourceBundle bundle = ResourceBundle.getBundle("resources.locus");  
	    return bundle.getString("baidu_key");
	}
	
	/**
	 * 查询出 车牌号码为licensePlate的车在[startLong,endLong)的轨迹
	 * @param startLong   	开始时间
	 * @param endLong		结束时间
	 * @param licensePlate  车牌号码
	 * @param url1                           服务器的url地址
	 * @return
	 */
	public static List<Map<String,Object>> getSimpleCarTrace(long startLong, long endLong,
			String licensePlate, String url1)  {
		
		List<Map<String,Object>> carList = new ArrayList<Map<String,Object>>();
		StringBuilder localUrl = new StringBuilder(url1);
		localUrl.append(licensePlate).append("?start=").append(startLong).append("&end=").append(endLong);//将参数拼接到url地址中
		
		RestTemplate rt = new RestTemplate();
		String srtList = rt.getForObject(localUrl.toString(), String.class);
		
		JSONArray jsonArray = JSONArray.fromObject(srtList);
		Object [] obj = jsonArray.toArray();
		if(obj.length>0){
			for(int i=0;i<obj.length;i++){  
				Map<String, Object> carMap = (Map<String, Object>) obj[i];
				carList.add(carMap);
			}
		}
		return carList;
	}
	
	
	/**由gps的经纬度得到百度地址
	 * 
	 * @param latitude    	纬度
	 * @param longtitude 	经度
	 * @param url2			url地址
	 * @throws IOException
	 */
	public static String LatAndLongToLocation(double latitude, double longtitude,String url2) {
		//1，拼接url
		StringBuilder localUrl = new StringBuilder(url2);
//		BAIDU_KEY=readProperties();
		localUrl.append(BAIDU_KEY).append("&callback=renderReverse&location=");
		localUrl.append(latitude).append(",").append(longtitude);
		localUrl.append("&output=json&pois=1&coordtype=wgs84ll");
		
		//2,建立连接
		RestTemplate rt = new RestTemplate();
		String resources=null;
		String location = "未知";
		try{
			resources = rt.getForObject(localUrl.toString(), String.class);
		}catch(Exception e){
			e.printStackTrace();
			resources = null;	
		}
		if(resources!=null){
			 location = getJson(resources);
		}
		 return location;
	}
	
	/*	resources为百度上的json数据
	 * 把从百度地图上的得到json数据进行解析
	 * 返回值是解析好的地址
	 */
	public static String getJson(String resources) {
		StringBuilder retLocation =new StringBuilder();
		//错误发生地方：java.lang.StringIndexOutOfBoundsException: String index out of range: -1
		if (resources.length() > 0 && resources.contains("{")&& resources.contains("}")) {
			resources = resources.substring(resources.indexOf("{"), resources.lastIndexOf("}") + 1);
		} else {
			return retLocation.toString();
		}
		if (resources.contains("{") && resources.contains("}")) {
			JSONObject jsonObject = JSONObject.fromObject(resources);
			if (jsonObject.containsKey("status")) {// 看是否包含状态码
				if (jsonObject.get("status").equals(0)) {
					JSONObject jsonObject2 = JSONObject.fromObject(jsonObject.get("result").toString());
					if (jsonObject2.containsKey("formatted_address")) {
						retLocation.append(jsonObject2.get("formatted_address").toString());
					}
					if (jsonObject2.containsKey("sematic_description")) {
						retLocation.append(jsonObject2.get("sematic_description").toString());
					}

				}
			}
		}
		return retLocation.toString();
		
	}
	
	
	
	

	
//**********************************************************************************
	//取得http请求连接
	public static String getConnection(StringBuilder url) throws IOException{
		URL realUrl = new URL(url.toString());
		// 打开和URL之间的连接
		HttpURLConnection urlConnection = (HttpURLConnection) realUrl.openConnection();
		// 建立实际的连接
		urlConnection.connect();
		// 定义 BufferedReader输入流来读取URL的响应
		BufferedReader reader = new BufferedReader(new InputStreamReader(urlConnection.getInputStream(),"UTF-8"));
		
		String lines = reader.readLine();
		// 使用finally块来关闭输入流
		reader.close(); 
	    urlConnection.disconnect();
	    return lines;
	    
	}
	

	//拼接得到百度地图经纬度的url
	public static void getBaiduLatAndLong(List<Map<String, Object>> carList,StringBuilder url) throws IOException {
		if(carList!= null&&carList.size()>0){
			url.append(BAIDU_KEY).append("&coords=");
			int size = carList.size();
			for(int i=0;i<size;i++){
				if(i!=size-1){
					url.append(carList.get(i).get("LONGITUDE")).append(",").append(carList.get(i).get("LATITUDE")).append(";");
				}else{
					url.append(carList.get(i).get("LONGITUDE")).append(",").append(carList.get(i).get("LATITUDE"));
				}
				
			}
			getConnection(url);
			
		    
		}
		
	}

}
