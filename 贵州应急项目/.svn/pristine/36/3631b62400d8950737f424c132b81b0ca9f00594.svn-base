package com.sucsoft.gzhbyjwz.util;

import com.aliyuncs.DefaultAcsClient;
import com.aliyuncs.IAcsClient;
import com.aliyuncs.dysmsapi.model.v20170525.SendSmsRequest;
import com.aliyuncs.dysmsapi.model.v20170525.SendSmsResponse;
import com.aliyuncs.http.MethodType;
import com.aliyuncs.profile.DefaultProfile;
import com.aliyuncs.profile.IClientProfile;
import net.sf.json.JSONObject;

import java.util.HashMap;
import java.util.Map;
import java.util.logging.Logger;

public class MessageUtil {

    private static Logger logger = Logger.getLogger(MessageUtil.class.getName());

	private static final String AccessKeyID="LTAI3cud0TrxUovG";
	private static final String AccessKeySecret="fWmdtdYusdT4vI6jxuUR7ueiRxrPGo";
	private static final String SignName="风险源";
	private static final String TemplateCode="SMS_150577985";


	public static void sendMsg(String nums,String msg) {
		try {
//			Map<String, String> smallMap = new HashMap<String, String>();
//		    smallMap.put("time", "438");
//			JSONObject jsonObject = JSONObject.fromObject(smallMap);
//			msg = jsonObject.toString();

			// 设置超时时间-可自行调整
			System.setProperty("sun.net.client.defaultConnectTimeout", "10000");
			System.setProperty("sun.net.client.defaultReadTimeout", "10000");
			// 初始化ascClient需要的几个参数
			// 短信API产品名称（短信产品名固定，无需修改）
			final String product = "Dysmsapi";
			// 短信API产品域名（接口地址固定，无需修改）
			final String domain = "dysmsapi.aliyuncs.com";
			// 替换成你的AK
			// 你的accessKeyId,参考本文档步骤2
			final String accessKeyId = AccessKeyID;
			// 你的accessKeySecret，参考本文档步骤2
			final String accessKeySecret = AccessKeySecret;
			// 初始化ascClient,暂时不支持多region（请勿修改）
			IClientProfile profile = DefaultProfile.getProfile("cn-hangzhou",accessKeyId, accessKeySecret);
			DefaultProfile.addEndpoint("cn-hangzhou", "cn-hangzhou", product,domain);
			IAcsClient acsClient = new DefaultAcsClient(profile);
			// 组装请求对象
			SendSmsRequest request = new SendSmsRequest();
			// 使用post提交
			request.setMethod(MethodType.POST);
			// 必填:待发送手机号。支持以逗号分隔的形式进行批量调用，批量上限为1000个手机号码,批量调用相对于单条调用及时性稍有延迟,验证码类型的短信推荐使用单条调用的方式
			request.setPhoneNumbers(nums);
			// 必填:短信签名-可在短信控制台中找到
			request.setSignName(SignName);
			// 必填:短信模板-可在短信控制台中找到
			request.setTemplateCode(TemplateCode);
			// 可选:模板中的变量替换JSON串,如模板内容为"亲爱的${name},您的验证码为${code}"时,此处的值为
			// 友情提示:如果JSON中需要带换行符,请参照标准的JSON协议对换行符的要求,比如短信内容中包含\r\n的情况在JSON中需要表示成\\r\\n,否则会导致JSON在服务端解析失败
			request.setTemplateParam(msg);

			logger.info("进入调用服务");
			SendSmsResponse sendSmsResponse = acsClient.getAcsResponse(request);
			logger.info("返回值为:"+sendSmsResponse.getCode()+" 描述："+sendSmsResponse.getMessage());
		} catch (Exception e) {
			e.printStackTrace();
		}
	}

	public static String string2Unicode(String string) {
		 
	    StringBuffer unicode = new StringBuffer();
	 
	    for (int i = 0; i < string.length(); i++) {
	 
	        // 取出每一个字符
	        char c = string.charAt(i);
	 
	        // 转换为unicode
	        unicode.append("\\u" + Integer.toHexString(c));
	    }
	 
	    return unicode.toString();
	}
}
