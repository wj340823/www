package com.sucsoft.gzhbyjwz.controller;


import com.sucsoft.gzhbyjwz.bean.common.Page;
import com.sucsoft.gzhbyjwz.bean.common.TempData;
import com.sucsoft.gzhbyjwz.service.BasicDataService;
import com.sucsoft.gzhbyjwz.service.XzqyService;
import com.sucsoft.gzhbyjwz.service.user.UserService;
import io.swagger.annotations.*;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.MediaType;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RestController;

import javax.servlet.http.HttpServletRequest;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

@RestController
@RequestMapping("/basicData")
@Api(value="基础数据模块",description="基础数据模块")
public class BasicDataController {

    @Autowired
    private BasicDataService basicDataService;
    @Autowired
    private XzqyService xzqyService;
    @Autowired
    private TempData tempData;

    @RequestMapping(value="/listXzqy",method= RequestMethod.GET)
    @ApiOperation(httpMethod="GET",value="列表查询行政区域",notes="列表查询行政区域",
            response=List.class,produces= MediaType.TEXT_PLAIN_VALUE)
    public Object listXzqy(String xzqyId,HttpServletRequest request) throws Exception {

        return xzqyService.getchildren(xzqyId);
    }

    @RequestMapping(value="/listXzqyCountWarehouse",method= RequestMethod.GET)
    @ApiOperation(httpMethod="GET",value="列表统计行政区域",notes="列表统计行政区域",
            response=List.class,produces= MediaType.TEXT_PLAIN_VALUE)
    public List<Map> listXzqyCountWarehouse() throws Exception {

        return basicDataService.listXzqyCountWarehouse();
    }

    @RequestMapping(value="/countEmergencyResource",method= RequestMethod.GET)
    @ApiOperation(httpMethod="GET",value="首页应急资源统计",notes="首页应急资源统计",
            response=List.class,produces= MediaType.TEXT_PLAIN_VALUE)
    public List<Map> countEmergencyResource() throws Exception {

        return basicDataService.countEmergencyResource();
    }

    @RequestMapping(value="/countSimulation",method= RequestMethod.GET)
    @ApiOperation(httpMethod="GET",value="首页应急资模拟统计",notes="首页应急资模拟统计",
            response=List.class,produces= MediaType.TEXT_PLAIN_VALUE)
    public List<Map> countSimulation() throws Exception {
        if (tempData.getMap().isEmpty()){
            return null;
        }
        List<Map> simulationCount = new ArrayList<>();
        simulationCount.addAll((List<Map>) tempData.getMap().get("simulationCount"));
        Map eventMap = new HashMap();
        eventMap.put("name","应急模拟事件");
        eventMap.put("count",basicDataService.countAtmosphericEvent());
        simulationCount.add(eventMap);

        return simulationCount;
    }

    @RequestMapping(value="/listXzqyCountRiskSource",method= RequestMethod.GET)
    @ApiOperation(httpMethod="GET",value="列表查询行政区域",notes="列表查询行政区域",
            response=List.class,produces= MediaType.TEXT_PLAIN_VALUE)
    public List<Map> listXzqyCountRiskSource() throws Exception {

        return basicDataService.listXzqyCountRiskSource();
    }

    @RequestMapping(value="/listManagerCrew",method= RequestMethod.GET)
    @ApiOperation(httpMethod="GET",value="列表查询机构人员",notes="列表查询机构人员",
            response=List.class,produces= MediaType.TEXT_PLAIN_VALUE)
    @ApiImplicitParams({
            @ApiImplicitParam(value = "搜索关键字",name = "keywords",required = false,paramType = "query"),
            @ApiImplicitParam(value = "所属机构名称",name = "unit",required = false,paramType = "query"),
            @ApiImplicitParam(value = "所属机构名称",name = "xzqy",required = false,paramType = "query"),
            @ApiImplicitParam(value = "页大小",name = "pageSize",required = false,paramType = "query"),
            @ApiImplicitParam(value = "页数",name = "pageNo",required = false,paramType = "query")
    })
    public Page listManagerCrew(String keywords,String unit,String xzqy, Integer pageSize, Integer pageNo) throws Exception {

        return basicDataService.listManagerCrew(keywords,unit,xzqy,pageSize,pageNo);
    }

    @RequestMapping(value="/listManagerCrewUnit",method= RequestMethod.GET)
    @ApiOperation(httpMethod="GET",value="列表查询机构人员的单位",notes="列表查询机构人员的单位",
            response=List.class,produces= MediaType.TEXT_PLAIN_VALUE)
    @ApiImplicitParams({
            @ApiImplicitParam(value = "搜索关键字",name = "keywords",required = false,paramType = "query"),
            @ApiImplicitParam(value = "页大小",name = "pageSize",required = false,paramType = "query"),
            @ApiImplicitParam(value = "页数",name = "pageNo",required = false,paramType = "query")
    })
    public Page listManagerCrewUnit(String keywords, Integer pageSize, Integer pageNo) throws Exception {

        return basicDataService.listManagerCrewUnit(keywords,pageSize,pageNo);
    }

    @RequestMapping(value="/listWareHouse",method= RequestMethod.GET)
    @ApiOperation(httpMethod="GET",value="查询所有仓库",notes="查询所有仓库",
            response=List.class,produces= MediaType.TEXT_PLAIN_VALUE)
    public List<Map> listWareHouse(String xzqyId) throws Exception {

        return basicDataService.listWareHouse(xzqyId);
    }

    @RequestMapping(value="/getWareHouse",method= RequestMethod.GET)
    @ApiOperation(httpMethod="GET",value="查询所有仓库",notes="查询所有仓库",
            response=List.class,produces= MediaType.TEXT_PLAIN_VALUE)
    public Object getWareHouse(String id) throws Exception {

        return basicDataService.getWareHouse(id);
    }

    @RequestMapping(value="/getManagerSpecialist",method= RequestMethod.GET)
    @ApiOperation(httpMethod="GET",value="列表查询专家库",notes="列表查询专家库",
            response=List.class,produces= MediaType.TEXT_PLAIN_VALUE)
    public Object getManagerSpecialist(String name,Integer pageNo,Integer pageSize) throws Exception {

        return basicDataService.getManagerSpecialist(name,pageNo,pageSize);
    }
}
