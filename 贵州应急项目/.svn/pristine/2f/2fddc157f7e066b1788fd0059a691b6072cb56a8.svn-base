package com.sucsoft.gzhbyjwz.bean.common.river;

import com.cgs.dc.starter.model.GetOptions;
import com.sucsoft.gzhbyjwz.bean.common.reader.ResourceReader;
import com.sucsoft.gzhbyjwz.bean.dc12.River;
import com.sucsoft.gzhbyjwz.service.common.BasicQueryService;
import net.sf.json.JSONArray;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.stereotype.Component;

import java.io.IOException;
import java.nio.file.Paths;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

@Component
public class RiverDataFactory {
    @Autowired
    BasicQueryService queryService;

    @Autowired
    ResourceReader resourceReader;

    @Value("${river.filePath}")
    private String filePath;

    @Value("${application.file.encoding}")
    private String encoding;

    /**
     * 从柳周给的json文件里读取河流的经纬度list
     * @return
     */
    public Map<String,double[][]> createRiverMap(){
        List<River> list = queryService.getCrudService().list(River.class.getName(),new GetOptions(),River.class);

        Map riverMap = new HashMap();
        for (River river:list){
            try {
                Map<String, Object> objectMap = resourceReader.readJson(Paths.get(filePath,river.getJsonUrl()).toString(), encoding);
                riverMap.put(river.getName(),convert2Array(((List<List<List<List>>>)objectMap.get("coordinates")).get(0).get(0)));
            } catch (IOException e) {
                continue;
            }
        }
        return riverMap;
    }

    public double[][] convert2Array(List<List> lists) {
        double[][] pointArray = new double[lists.size()][2];
        int i = 0;
        for (List list:lists){
            pointArray[i][0]=Double.parseDouble(list.get(0).toString());
            pointArray[i][1]=Double.parseDouble(list.get(1).toString());
            i++;
        }
        return pointArray;
    }

}
