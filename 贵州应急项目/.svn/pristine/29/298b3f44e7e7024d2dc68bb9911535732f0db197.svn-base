package com.sucsoft.gzhbyjwz.controller;

import com.sucsoft.gzhbyjwz.bean.common.Page;
import com.sucsoft.gzhbyjwz.bean.dc12.*;
import com.sucsoft.gzhbyjwz.service.companyinfo.CompanyInfoService;
import com.sucsoft.gzhbyjwz.service.risksource.RiskSourceService;
import com.sucsoft.gzhbyjwz.service.risksource.RiskSourceTwoService;
import io.swagger.annotations.Api;
import io.swagger.annotations.ApiImplicitParam;
import io.swagger.annotations.ApiImplicitParams;
import io.swagger.annotations.ApiOperation;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.MediaType;
import org.springframework.web.bind.annotation.*;
import org.springframework.web.multipart.MultipartFile;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import java.io.IOException;
import java.util.List;
import java.util.Map;

@RestController
@RequestMapping("/riskSourceTwo")
@Api(value="RiskSourceTwoController",description="风险源新增内容模块")
public class RiskSourceTwoController {

    @Autowired
    private RiskSourceTwoService riskSourceTwoService;

    @Autowired
    private CompanyInfoService companyInfoService;

    @Autowired
    private RiskSourceService riskSourceService;

    @ApiOperation(value = "增加生产工艺",notes = "增加生产工艺", httpMethod = "POST")
    @RequestMapping(value="/addProductionProcess",method= RequestMethod.POST)
    public boolean productionProcessByAdd(@RequestBody ProductionProcess productionProcess) throws Exception{
        return riskSourceTwoService.addProductionProcess(productionProcess) ;
    }

    @ApiOperation(value = "更新生产工艺",notes = "更新生产工艺", httpMethod = "POST")
    @RequestMapping(value="/updateProductionProcess",method= RequestMethod.POST)
    public boolean productionProcessByUpdate(@RequestBody ProductionProcess productionProcess) throws Exception{
        return riskSourceTwoService.updateProductionProcess(productionProcess) ;
    }

    @ApiOperation(value = "查询生产工艺",notes = "查询生产工艺", httpMethod = "GET")
    @RequestMapping(value="/getProductionProcess",method= RequestMethod.GET)
    public Page productionProcessInfo(String qyId, String gylx, Integer pageNo, Integer pageSize) throws Exception{
        return riskSourceTwoService.getProductionProcess(qyId, gylx, pageNo, pageSize) ;
    }

    @ApiOperation(value = "删除生产工艺",notes = "删除生产工艺", httpMethod = "GET")
    @RequestMapping(value="/deleteProductionProcess",method= RequestMethod.GET)
    public boolean productionProcessByDelete(String id) throws Exception{
        return riskSourceTwoService.deleteProductionProcess(id) ;
    }


    @ApiOperation(value = "增加环境风险物质",notes = "增加环境风险物质", httpMethod = "POST")
    @RequestMapping(value="/addHjRiskSubstances",method= RequestMethod.POST)
    public boolean hjRiskSubstancesByAdd(@RequestBody HjRiskSubstances hjRiskSubstances) throws Exception{
        return riskSourceTwoService.addHjRiskSubstances(hjRiskSubstances) ;
    }

    @ApiOperation(value = "更新环境风险物质",notes = "更新环境风险物质", httpMethod = "POST")
    @RequestMapping(value="/updateHjRiskSubstances",method= RequestMethod.POST)
    public boolean hjRiskSubstancesByUpdate(@RequestBody HjRiskSubstances hjRiskSubstances) throws Exception{
        return riskSourceTwoService.updateHjRiskSubstances(hjRiskSubstances) ;
    }

    @ApiOperation(value = "删除环境风险物质",notes = "删除环境风险物质", httpMethod = "GET")
    @RequestMapping(value="/deleteHjRiskSubstances",method= RequestMethod.GET)
    public boolean hjRiskSubstancesByDelete(String id) throws Exception{
        return riskSourceTwoService.deleteHjRiskSubstances(id) ;
    }

    @ApiOperation(value = "查询环境风险物质",notes = "查询环境风险物质", httpMethod = "GET")
    @RequestMapping(value="/getHjRiskSubstances",method= RequestMethod.GET)
    public Page hjRiskSubstancesInfo(String qyId, String fxlx, Integer pageNo, Integer pageSize) throws Exception{
        return riskSourceTwoService.getHjRiskSubstances(qyId, fxlx, pageNo, pageSize) ;
    }

       @ApiOperation(value = "增加环境风险受体",notes = "增加环境风险受体", httpMethod = "POST")
    @RequestMapping(value="/addRiskReceptor",method= RequestMethod.POST)
    public boolean riskReceptorByAdd(@RequestBody RiskReceptor riskReceptor) throws Exception{
        return riskSourceTwoService.addRiskReceptor(riskReceptor) ;
    }

    @ApiOperation(value = "更新环境风险受体",notes = "更新环境风险受体", httpMethod = "POST")
    @RequestMapping(value="/updateRiskReceptor",method= RequestMethod.POST)
    public boolean riskReceptorByUpdate(@RequestBody RiskReceptor riskReceptor) throws Exception{
        return riskSourceTwoService.updateRiskReceptor(riskReceptor) ;
    }

    @ApiOperation(value = "删除环境风险受体",notes = "删除环境风险受体", httpMethod = "GET")
    @RequestMapping(value="/deleteRiskReceptor",method= RequestMethod.GET)
    public boolean riskReceptorByDelete(String id) throws Exception{
        return riskSourceTwoService.deleteRiskReceptor(id) ;
    }

    @ApiOperation(value = "查询环境风险受体",notes = "查询环境风险受体", httpMethod = "GET")
    @RequestMapping(value="/getRiskReceptor",method= RequestMethod.GET)
    public Page riskReceptorInfo(String qyId, String stlx, Integer pageNo, Integer pageSize) throws Exception{
        return riskSourceTwoService.getRiskReceptor(qyId, stlx, pageNo, pageSize) ;
    }

    @ApiOperation(value = "增加突发环境事件情景分析",notes = "增加突发环境事件情景分析", httpMethod = "POST")
    @RequestMapping(value="/addQyScenarioAnalysis",method= RequestMethod.POST)
    public boolean qyScenarioAnalysisByAdd(@RequestBody QyScenarioAnalysis qyScenarioAnalysis) throws Exception{
        return riskSourceTwoService.addQyScenarioAnalysis(qyScenarioAnalysis) ;
    }

    @ApiOperation(value = "更新突发环境事件情景分析",notes = "更新突发环境事件情景分析", httpMethod = "POST")
    @RequestMapping(value="/updateQyScenarioAnalysis",method= RequestMethod.POST)
    public boolean qyScenarioAnalysisByUpdate(@RequestBody QyScenarioAnalysis qyScenarioAnalysis) throws Exception{
        return riskSourceTwoService.updateQyScenarioAnalysis(qyScenarioAnalysis) ;
    }

    @ApiOperation(value = "删除突发环境事件情景分析",notes = "删除突发环境事件情景分析", httpMethod = "GET")
    @RequestMapping(value="/deleteQyScenarioAnalysis",method= RequestMethod.GET)
    public boolean qyScenarioAnalysisByDelete(String id) throws Exception{
        return riskSourceTwoService.deleteQyScenarioAnalysis(id) ;
    }

    @ApiOperation(value = "查询突发环境事件情景分析",notes = "查询突发环境事件情景分析", httpMethod = "GET")
    @RequestMapping(value="/getQyScenarioAnalysis",method= RequestMethod.GET)
    public Page qyScenarioAnalysisInfo(String qyId, Integer pageNo, Integer pageSize) throws Exception{
        return riskSourceTwoService.getQyScenarioAnalysis(qyId, pageNo, pageSize) ;
    }


    @ApiOperation(value = "更新环境风险要素",notes = "更新环境风险要素", httpMethod = "POST")
    @RequestMapping(value="/updateRiskFactors",method= RequestMethod.POST)
    public boolean riskFactorsByUpdate(@RequestBody RiskFactors riskFactors) throws Exception{
        return riskSourceTwoService.updateRiskFactors(riskFactors) ;
    }

    @ApiOperation(value = "查询环境风险要素",notes = "查询环境风险要素", httpMethod = "GET")
    @RequestMapping(value="/getRiskFactors",method= RequestMethod.GET)
    public List<RiskFactors> riskFactorsInfo(String qyId) throws Exception{
        return riskSourceTwoService.getRiskFactors(qyId) ;
    }

    @ApiOperation(value = "企业环境风险要素初始化",notes = "企业环境风险要素初始化", httpMethod = "GET")
    @RequestMapping(value="/initRiskFactors",method= RequestMethod.GET)
    public boolean riskFactorsByInit() throws Exception{
        return riskSourceTwoService.initRiskFactors() ;
    }


    @ApiOperation(value = "新增风险源基本信息", httpMethod = "POST")
    @RequestMapping(value="/enterpriseInfo/save",method= RequestMethod.POST)
    public Map<String,Object> saveEnterpriseInfo(@RequestBody EnterpriseInformation enterpriseInformation, String type) {
        return companyInfoService.saveEnterpriseInfo(enterpriseInformation, type);
    }
    @ApiOperation(value = "更新风险源基本信息", httpMethod = "POST")
    @RequestMapping(value="/enterpriseInfo/update",method= RequestMethod.POST)
    public Map<String,Object> updateEnterpriseInfo(@RequestBody EnterpriseInformation enterpriseInformation, String type) {
        return companyInfoService.updateEnterpriseInfo(enterpriseInformation, type);
    }

    @ApiOperation(value = "新增产品信息", httpMethod = "POST")
    @RequestMapping(value="/productInfo/save",method= RequestMethod.POST)
    public Map<String,Object> saveProductInfo(@RequestBody ProductInfo productInfo) {
        return companyInfoService.saveProductInfo(productInfo);
    }

    @ApiOperation(value = "更新产品信息", httpMethod = "POST")
    @RequestMapping(value="/productInfo/update",method= RequestMethod.POST)
    public Map<String,Object> updateProductInfo(@RequestBody ProductInfo productInfo) {
        return companyInfoService.updateProductInfo(productInfo);
    }

    @ApiOperation(value = "删除产品信息", httpMethod = "GET")
    @RequestMapping(value="/productInfo/delete/{productInfoId}",method= RequestMethod.GET)
    public void deleteProductInfo(@PathVariable String productInfoId){
        companyInfoService.deleteProductInfo(productInfoId);
    }

    @ApiOperation(value = "查询风险源基本信息", httpMethod = "GET")
    @RequestMapping(value="/enterpriseInfo/{companyId}",method= RequestMethod.GET)
    public EnterpriseInformation getEnterpriseInformationDetailInfo(@PathVariable String companyId) throws Exception {
        return companyInfoService.getEnterpriseInformationDetailInfo(companyId);
    }

    @ApiOperation(value = "宏观数据图列表", httpMethod = "GET")
    @RequestMapping(value="/file/list/{companyId}",method= RequestMethod.GET)
    public List<FileStorage> getFileStorageList(@PathVariable String companyId) throws Exception {
        return companyInfoService.getFileStorageList(companyId);
    }

    @ApiOperation(value = "新增宏观数据图", httpMethod = "POST")
    @RequestMapping(value="/file/upload",method= RequestMethod.POST)
    public Map<String,Object> uploadFile(@RequestBody MultipartFile file, String name, String companyId,String type) throws IOException {
        return companyInfoService.uploadFile(file, name, companyId,type);
    }

    @ApiOperation(value = "下载宏观数据图", httpMethod = "GET")
    @RequestMapping(value="/file/download/{fileId}",method= RequestMethod.GET)
    public void downLoadFile(@PathVariable String fileId, HttpServletResponse response) throws IOException {companyInfoService.downLoadFile(fileId,response);
    }

    @ApiOperation(value = "删除宏观数据图", httpMethod = "GET")
    @RequestMapping(value="/file/delete/{fileId}",method= RequestMethod.GET)
    public void deleteFileStorage(@PathVariable String fileId){
        companyInfoService.deleteFileStorage(fileId);
    }

    @ApiOperation(value = "新增环境风险源单元", httpMethod = "POST")
    @RequestMapping(value="/RiskSourceUnit/save",method= RequestMethod.POST)
    public Map<String,Object> addRiskSourceUnit(@RequestBody RiskSourceUnit riskSourceUnit) {
        return companyInfoService.addRiskSourceUnit(riskSourceUnit);
    }

    @ApiOperation(value = "更新环境风险源单元", httpMethod = "POST")
    @RequestMapping(value="/RiskSourceUnit/update",method= RequestMethod.POST)
    public Map<String,Object> updateRiskSourceUnit(@RequestBody RiskSourceUnit riskSourceUnit) {
        return companyInfoService.updateRiskSourceUnit(riskSourceUnit);
    }

    @ApiOperation(value = "环境风险源单元列表", httpMethod = "GET")
    @RequestMapping(value="/RiskSourceUnit/list/{companyId}",method= RequestMethod.GET)
    public  List<RiskSourceUnit>  getRiskSourceUnitList(@PathVariable String companyId)  throws Exception {
        return companyInfoService.getRiskSourceUnitList(companyId);
    }

    @ApiOperation(value = "获取环境风险源信息单元信息", httpMethod = "GET")
    @RequestMapping(value="/RiskSourceUnit/{unid}",method= RequestMethod.GET)
    public RiskSourceUnit getRiskSourceUnitInfo(@PathVariable String unid) throws Exception {
        return companyInfoService.getRiskSourceUnitInfo(unid);
    }

    @ApiOperation(value = "删除风险源信息单元信息", httpMethod = "GET")
    @RequestMapping(value="/RiskSourceUnit/delete/{unitd}",method= RequestMethod.GET)
    public void deleteRiskSourceUnit(@PathVariable String unitd){
        companyInfoService.deleteRiskSourceUnit(unitd);
    }

    @ApiOperation(value = "新增环境风险防控设施", httpMethod = "POST")
    @RequestMapping(value="/RiskControlMeasures/save",method= RequestMethod.POST)
    public Map<String,Object> addRiskControlMeasures(@RequestBody RiskControlMeasures riskControlMeasures) {
        return companyInfoService.addRiskControlMeasures(riskControlMeasures);
    }

    @ApiOperation(value = "更新环境风险防控设施", httpMethod = "POST", notes = "参数包含多个值用英文逗号隔开")
    @RequestMapping(value="/riskControlMeasures/update",method= RequestMethod.POST)
    public Map<String,Object> updateRiskControlMeasures(@RequestBody RiskControlMeasures riskControlMeasures) {
        return companyInfoService.updateRiskControlMeasures(riskControlMeasures);
    }

    @Deprecated
    @ApiOperation(value = "气环境新增或更新环境风险防控设施", httpMethod = "POST", notes = "参数包含多个值用英文逗号隔开")
    @RequestMapping(value="/addOrUpdateQiRiskControlMeasures",method= RequestMethod.POST)
    public Map<String,Object> addOrUpdateQiRiskControlMeasures(@RequestBody QiRiskControlMeasures riskControlMeasures) {
        return companyInfoService.addOrUpdateQiRiskControlMeasures(riskControlMeasures);
    }

    @Deprecated
    @ApiOperation(value = "水环境新增或更新环境风险防控设施", httpMethod = "POST", notes = "参数包含多个值用英文逗号隔开")
    @RequestMapping(value="/addOrUpdateSuiRiskControlMeasures",method= RequestMethod.POST)
    public Map<String,Object> addOrUpdateSuiRiskControlMeasures(@RequestBody SuiRiskControlMeasures riskControlMeasures) {
        return companyInfoService.addOrUpdateSuiRiskControlMeasures(riskControlMeasures);
    }

    @Deprecated
    @ApiOperation(value = "获取气环境风险防控设施信息", httpMethod = "GET")
    @RequestMapping(value="/qiRiskControlMeasures/{companyId}",method= RequestMethod.GET)
    public List<QiRiskControlMeasures> getQiRiskControlMeasuresInfo(@PathVariable String companyId) throws Exception {
        return companyInfoService.getQiRiskControlMeasuresInfo(companyId);
    }

    @Deprecated
    @ApiOperation(value = "获取水环境风险防控设施信息", httpMethod = "GET")
    @RequestMapping(value="/suiRiskControlMeasures/{companyId}",method= RequestMethod.GET)
    public List<SuiRiskControlMeasures> getSuiRiskControlMeasuresInfo(@PathVariable String companyId) throws Exception {
        return companyInfoService.getSuiRiskControlMeasuresInfo(companyId);
    }

    @ApiOperation(value = "获取环境风险防控设施信息", httpMethod = "GET")
    @RequestMapping(value="/RiskControlMeasures/{companyId}",method= RequestMethod.GET)
    public RiskControlMeasures getRiskControlMeasuresInfo(@PathVariable String companyId) throws Exception {
        return companyInfoService.getRiskControlMeasuresInfo(companyId);
    }

    @ApiOperation(value = "获取环境风险受体-整体信息", httpMethod = "GET")
    @RequestMapping(value="/riskReceptorWithCompany/{companyId}",method= RequestMethod.GET)
    public List<RiskReceptorWithCompany> getRiskReceptorWithCompanyInfo(@PathVariable String companyId) throws Exception {
        return companyInfoService.getRiskReceptorWithCompanyInfo(companyId);
    }

    @ApiOperation(value = "更新环境风险受体-整体信息", httpMethod = "POST", notes = "多个值用英文逗号隔开")
    @RequestMapping(value="/updateRiskReceptorWithCompany",method= RequestMethod.POST)
    public Map<String,Object> updateRiskReceptorWithCompanyInfo(@RequestBody RiskReceptorWithCompany riskReceptorWithCompany) throws Exception {
        return companyInfoService.updateRiskReceptorWithCompanyInfo(riskReceptorWithCompany);
    }


    @ApiOperation(value = "风险源导出", httpMethod = "GET")
    @ApiImplicitParams({
            @ApiImplicitParam(name = "xzqyId",paramType = "query",value = "行政区域id"),
            @ApiImplicitParam(name = "keyword",paramType = "query",value = "名称关键字"),
            @ApiImplicitParam(name = "riskGrade",paramType = "query",value = "风险级别"),
            @ApiImplicitParam(name = "riverId",paramType = "query",value = "河流Id")
    })
    @RequestMapping(value="/listRiskSouce/export",method=RequestMethod.GET)
    public void exportListRiskSouce( HttpServletResponse response,String xzqyId, String keyword, String riverId, String riskGrade, Integer pageNo,Integer pageSize) throws Exception {
        if (xzqyId!=null && "-1".equals(xzqyId)){
            xzqyId = null;
        }
        riskSourceService.exportEnterprisePreplan(response,xzqyId,keyword,riverId,riskGrade,pageNo,pageSize);
    }

    @RequestMapping(value="/downModel",method= RequestMethod.GET)
    @ApiOperation(httpMethod="GET",value="下载Excel模板",notes="下载Excel模板",
            response= Page.class,produces= MediaType.TEXT_PLAIN_VALUE)
    public void downModelfj(HttpServletResponse response, HttpServletRequest request) throws Exception{
        companyInfoService.downModelfj(response);
    }

}
