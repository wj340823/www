package com.sucsoft.gzhbyjwz.controller;

import java.util.List;
import java.util.Map;

import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RestController;
import org.springframework.web.multipart.MultipartFile;

import com.sucsoft.gzhbyjwz.bean.common.Page;
import com.sucsoft.gzhbyjwz.bean.common.ResultBean;
import com.sucsoft.gzhbyjwz.bean.dc12.EnvironmentDepartMent;
import com.sucsoft.gzhbyjwz.bean.dc12.EnvironmentTask;
import com.sucsoft.gzhbyjwz.service.risksource.RiskScreeningService;

import io.swagger.annotations.Api;
import io.swagger.annotations.ApiImplicitParam;
import io.swagger.annotations.ApiImplicitParams;
import io.swagger.annotations.ApiOperation;

//风险排查
@RestController
@RequestMapping("/screening")
@Api(value="RiskScreeningController",description="风险排查模块")
public class RiskScreeningController {

	@Autowired
	private RiskScreeningService riskScreeningService;
	
    @RequestMapping(value="/distributed",method=RequestMethod.POST)
    @ApiOperation(httpMethod="POST",value="风险排查任务派发",notes="任务派发 风险排查文件上传")
    public ResultBean distributed(@RequestParam MultipartFile[] file,HttpServletRequest request,EnvironmentTask task) throws Exception{
        return riskScreeningService.distributed(file,request, task);
    }
    
    @ApiOperation(httpMethod="GET",value="任务排查单位查询",notes="查询单位")
    @RequestMapping(value="/queryUtilDetails",method=RequestMethod.GET)
    public List<EnvironmentDepartMent> queryUtilDetails(){
    	return riskScreeningService.queryUtilDetails();
    }
    @ApiOperation(httpMethod="GET",value="任务时间预警",notes="任务预警")
    @RequestMapping(value="/taskWarning",method=RequestMethod.GET)
    public Map<String,Object> taskWarning() throws Exception{
    	return riskScreeningService.taskWarning();
    }
    
    @ApiOperation(httpMethod="GET",value="任务预警详情查询",notes="任务预警")
    @ApiImplicitParams({
        @ApiImplicitParam(value = "排查任务id",name = "taskId",required = true,paramType = "query")
	 })
    @RequestMapping(value="/queryTaskDetails")
    public List<Map> queryTaskDetails(String taskId) throws Exception{
    	return riskScreeningService.queryTaskDetails(taskId);
    }
    
    @ApiOperation(httpMethod="GET",value="风险排查文件下载",notes="风险排查文件下载")
    @ApiImplicitParams({
        @ApiImplicitParam(value = "文件名称",name = "fileName",required = true,paramType = "query")
	 })
    @RequestMapping(value="/downLoadFile")
    public String downLoadFile(String fileName,HttpServletRequest request, HttpServletResponse response) throws Exception{
    	return riskScreeningService.downLoadFile(fileName,request,response);
    }
    
    
    @ApiOperation(httpMethod="GET",value="任务台账查询",notes="任务台账查询")
    @ApiImplicitParams({
        @ApiImplicitParam(name = "name",paramType = "query",value = "任务名称模糊查询"),
        @ApiImplicitParam(name = "pageNo",paramType = "query",value = "页码"),
        @ApiImplicitParam(name = "pageSize",paramType = "query",value = "页数")
	})
    @RequestMapping(value="/taskParameter")
    public Page<Map> taskParameter(String name,Integer pageNo,Integer pageSize) throws Exception{
    	return riskScreeningService.taskParameter(name,pageNo,pageSize);
    }
    
    
    @RequestMapping(value="/updateTest",method=RequestMethod.POST)
    @ApiOperation(httpMethod="POST",value="单文件上传测试",notes="单文件上传测试")
    public ResultBean updateTest(MultipartFile file,HttpServletRequest request,EnvironmentTask task) throws Exception{
        return riskScreeningService.updateTest(file,request, task);
    }
    
    @RequestMapping(value="/deleteTask",method=RequestMethod.GET)
    @ApiOperation(httpMethod="GET",value="风险排查任务删除",notes="风险排查任务删除")
    public ResultBean deleteTask(String taskId) throws Exception{
        return riskScreeningService.deleteTask(taskId);
    }
}
