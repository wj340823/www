package com.sucsoft.gzhbyjwz.controller;

import java.util.List;
import java.util.Map;

import com.cgs.authox.starter.domain.DefaultUser;
import com.sucsoft.gzhbyjwz.bean.common.Page;
import com.sucsoft.gzhbyjwz.service.user.LogService;
import com.sucsoft.gzhbyjwz.service.user.UserService;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RestController;

//import com.cgs.authox.starter.controller.AuthoxBasicUserController;
//import com.sucsoft.gzhbyjwz.service.user.TsetService;
import com.cgs.authox.spring.annotation.AuthoxResource;
import com.sucsoft.gzhbyjwz.bean.dc12.TblUser;
import org.springframework.http.MediaType;

import io.swagger.annotations.Api;
import io.swagger.annotations.ApiOperation;
import io.swagger.annotations.ApiParam;

import javax.servlet.http.HttpServletRequest;

/**
 * 用户管理
 * @author qiuyj
 */
//@ApiIgnore
@RestController
@RequestMapping("/user")
@Api(value="UserController",description="用户模块")
//public class UserController extends AuthoxBasicUserController<TblUser> {
public class UserController{
	
	/*@Autowired
	private TsetService tsetService;*/

	@Autowired
	private UserService userService;

	@Autowired
    private LogService logService;
	
	@AuthoxResource(value="authox", access="access")
    @RequestMapping(value="/create",method=RequestMethod.POST)
    @ApiOperation(httpMethod="POST",value="用户表",notes="创建用户",
    response=String.class,produces=MediaType.TEXT_PLAIN_VALUE)
    public String create(@ApiParam("用户实体")@RequestBody DefaultUser user) throws Exception{
        userService.createUser(user);
        return "success";
    }

    //@AuthoxResource(value="authox", access="access")
    @RequestMapping(value="/getInfo",method=RequestMethod.GET)
    @ApiOperation(httpMethod="GET",value="获取用户信息",notes="获取用户信息",
            response=String.class,produces=MediaType.TEXT_PLAIN_VALUE)
    public Object getInfo(HttpServletRequest request) throws Exception{

        return userService.getMyUserDetails(request.getSession());
    }

    @RequestMapping(value="/changePassword",method=RequestMethod.PUT)
    @ApiOperation(httpMethod="PUT",value="修改用户密码",notes="修改用户密码",
            response=String.class,produces=MediaType.TEXT_PLAIN_VALUE)
    public Object changePassword(String oldP,String newP) throws Exception{
	    userService.changePW(oldP,newP);
        return "success";
    }

    @RequestMapping(value="/createUsers",method=RequestMethod.GET)
    @ApiOperation(httpMethod="GET",value="批量创建用户",notes="批量创建用户",
            response=String.class,produces=MediaType.TEXT_PLAIN_VALUE)
    public Object createUsers() throws Exception{
	    userService.createUsers1();
//        userService.createUsersFromManagerCrew();
        return "success";
    }

    @RequestMapping(value="/createUserByCrewId",method=RequestMethod.GET)
    @ApiOperation(httpMethod="GET",value="批量创建用户",notes="批量创建用户",
            response=String.class,produces=MediaType.TEXT_PLAIN_VALUE)
    public Object createUserByCrewId(Integer crewId) throws Exception{
        //userService.createUsers();
        userService.createUserByCrewId(crewId);
        return "success";
    }

    /**
     * 登录日志查询
     * @param pageNo
     * @param pageSize
     * @return
     * @throws Exception
     */
    @RequestMapping(value="/listLoginLog",method=RequestMethod.GET)
    @ApiOperation(value="查询用户登录日志",notes="查询用户登录日志",
            response=Map.class,produces=MediaType.TEXT_PLAIN_VALUE)
    public Object listLoginLog(Integer pageNo,Integer pageSize) throws Exception{
        return logService.listLoginLog(pageNo,pageSize);
    }



    @RequestMapping(value="/createqy",method=RequestMethod.POST)
    @ApiOperation(value="创建企业用户",notes="创建企业用户",
            response=Map.class,produces=MediaType.TEXT_PLAIN_VALUE)
    public String createqy(@RequestBody com.sucsoft.gzhbyjwz.bean.common.user.TblUser
                                        tblUser) throws Exception{
        return userService.createqyUser(tblUser);
    }

    @RequestMapping(value="/qyInfo",method=RequestMethod.GET)
    @ApiOperation(value="查询企业用户",notes="查询企业用户",
            response=Map.class,produces=MediaType.TEXT_PLAIN_VALUE)
    public Page qyUser(String address, String companyName,Integer pageNo,Integer pageSize) throws Exception{
        return userService.queryqy(address,companyName,pageNo,pageSize);
    }

    @RequestMapping(value="/deleteUser",method=RequestMethod.GET)
    @ApiOperation(httpMethod="GET",value="删除用户",notes="删除用户",
            response=String.class,produces=MediaType.TEXT_PLAIN_VALUE)
    public Object delete(String uid) throws Exception{
        userService.deleteuser(uid);
        return "success";
    }
}
