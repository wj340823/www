package com.sucsoft.gzhbyjwz.service.goods;

import java.sql.PreparedStatement;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;
import java.util.Map;
import java.util.Map.Entry;
import java.util.concurrent.ConcurrentHashMap;
import java.util.concurrent.ConcurrentMap;

import org.apache.log4j.Logger;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.jdbc.core.BatchPreparedStatementSetter;
import org.springframework.jdbc.core.JdbcTemplate;
import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

import com.cgs.dc.PojoDataset;
import com.google.common.base.Joiner;
import com.sucsoft.gzhbyjwz.service.common.BasicQueryService;

/**
 * 商品搜索频度统计
 * @author Administrator
 *
 */
@Service
public class GoodsFrequencyService {
	@Autowired
	private BasicQueryService queryService;
	@Autowired
	private JdbcTemplate jt;
	@Autowired
	private PojoDataset dataset;
	
	private Logger logger = Logger.getLogger(this.getClass());
	
	private ConcurrentMap<String, Double> frequencyMap = new ConcurrentHashMap<String, Double>();
	
	//更新频度
	public synchronized void updateFrequency(List<Map> nameList,String key) {
		for (Map<String, Object> name : nameList) {		
			frequencyMap.putIfAbsent(name.get(key).toString(), (double) 0);
			Double times = frequencyMap.get(name.get(key).toString());
			times += 1;
			frequencyMap.put(name.get(key).toString(), times);
		}
		logger.info("frequencyMap:"+frequencyMap);
	}
	
	//更新频度
	public synchronized void updateFrequency(List<String> nameList) {
		for (String name : nameList) {
			
			frequencyMap.putIfAbsent(name, (double) 0);
			Double times = frequencyMap.get(name);
			times += 1;
			frequencyMap.put(name, times);
		}
		logger.info("frequencyMap:"+frequencyMap);
	}
	
	//将状态持久化到数据库
	@Transactional(rollbackFor = Exception.class)
	public int persistentFrequency() {
		if (frequencyMap.isEmpty()) {
			return 1;
		}
		logger.info("------ start persistentFrequency ------");
		
		
		List<Entry<String, Double>> list = new ArrayList<>();
		list.addAll(frequencyMap.entrySet());
		List<String> names = new ArrayList<>();
		frequencyMap.keySet().forEach((String name) -> names.add("'"+name+"'"));
		/**
		 * 第一步，将旧数据删除。
		 */
		String sql = String.format("DELETE FROM searchfrequency where goodsname in %s",
				"("+Joiner.on(',').join(names)+")");
		jt.execute(sql);
		
		/**
		 * 第二部，将新数据持久化。
		 */
		sql="insert into searchfrequency(GOODSNAME,FREQUENCY)" +   
	            " values(?,?)"; 
		int[] counts = jt.batchUpdate(sql, new BatchPreparedStatementSetter() {
			
			@Override
			public void setValues(PreparedStatement ps, int i) throws SQLException {
				// TODO Auto-generated method stub
				ps.setString(1, list.get(i).getKey());
				ps.setDouble(2, list.get(i).getValue());
			}
			
			@Override
			public int getBatchSize() {
				// TODO Auto-generated method stub
				return list.size();
			}
		});
		/**
		 * 第三部，将数据库中数据读入frequencyMap。
		 */
		sql="select GOODSNAME,FREQUENCY from searchfrequency";
		List<Map<String, Object>> newList = jt.queryForList(sql);
		for (Map<String, Object> map : newList) {
			frequencyMap.put(map.get("GOODSNAME").toString(), (Double) map.get("FREQUENCY"));
		}
		logger.info("------ end persistentFrequency ------");
		return 0;
	}
	
	
	
}
